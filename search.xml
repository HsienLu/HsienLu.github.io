<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>部落格介紹</title>
    <url>/2023/12/29/20231228-first/</url>
    <content><![CDATA[<h2 id="關於我"><a href="#關於我" class="headerlink" title="關於我"></a>關於我</h2><p>一位自稱前端工程師的全端工程師，平常喜歡看看技術文章，順便做做筆記，有時候也會寫一些奇怪的東西，歡迎來到我的部落格。</p>
]]></content>
  </entry>
  <entry>
    <title>在 html 使用 ejs 的方法</title>
    <url>/2023/12/29/use-ejs-in-html/</url>
    <content><![CDATA[<h3 id="ejs-常用簡單語法介紹"><a href="#ejs-常用簡單語法介紹" class="headerlink" title="ejs 常用簡單語法介紹"></a>ejs 常用簡單語法介紹</h3><p>1.撰寫程式邏輯</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;% <span class="string">&quot;這裡寫程式邏輯&quot;</span> %&gt;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>2.傳遞參數</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;%= <span class="string">&quot;傳遞參數&quot;</span> %&gt;</span><br></pre></td></tr></table></figure>

<p>3.傳遞 HTML 語法</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;%- <span class="string">&quot;傳遞HTML語法&quot;</span> %&gt;</span><br></pre></td></tr></table></figure>

<p>&lt;%&#x3D; %&gt; 和 &lt;%- %&gt;差別<br>“&#x3D;”:會完整傳遞<br>“-“:它看得懂 HTML 語法</p>
<p>4.匯入 ejs:有兩個參數<br>第一個參數是路徑<br>第二個參數是要傳進去的變數要用物件包起來，有點像 React 的 Props</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;%- <span class="title function_">include</span>(<span class="string">&quot;./layout/test&quot;</span>,&#123;element,id&#125;) %&gt;</span><br></pre></td></tr></table></figure>

<h3 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h3><p>1.ejs 模板</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">//檔名:test.ejs</span></span><br><span class="line">&lt;h1&gt;hello world &lt;%= element %&gt;&lt;%= id %&gt;&lt;/h1&gt;</span><br></pre></td></tr></table></figure>

<p>2.要寫的 html，只列 body</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;% <span class="keyword">let</span> name=[<span class="string">&quot;Robin&quot;</span>,<span class="string">&quot;Amy&quot;</span>,<span class="string">&quot;Ann&quot;</span>] %&gt;<span class="comment">//這裡是定義變數，未來可能會打API存在這</span></span><br><span class="line">&lt;% name.<span class="title function_">map</span>(<span class="function">(<span class="params">element,id</span>)=&gt;</span> &#123; %&gt;<span class="comment">//因為中間要塞這個可以轉譯HTML的語法，所以拆開來寫</span></span><br><span class="line">&lt;%- <span class="title function_">include</span>(<span class="string">&quot;./layout/test&quot;</span>,&#123;element,id&#125;) %&gt;<span class="comment">//匯入剛剛的ejs模板並帶入變數</span></span><br><span class="line">&lt;% &#125;); %&gt;<span class="comment">//因為中間要塞這個可以轉譯HTML的語法，所以拆開來寫</span></span><br></pre></td></tr></table></figure>

<p>3.完成結果如下<br><img src="https://i.imgur.com/B91Jqx1.png"></p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>ejs</tag>
      </tags>
  </entry>
  <entry>
    <title>window&amp;body</title>
    <url>/2023/12/29/window-body/</url>
    <content><![CDATA[<h2 id="文字版"><a href="#文字版" class="headerlink" title="文字版"></a>文字版</h2><p>在 JavaScript 中，window 和 document.body 是兩個重要的全局物件，它們代表瀏覽器視窗和網頁文件的主體部分。讓我們來看一下它們之間的差異：</p>
<span id="more"></span>

<ol>
<li>window：</li>
</ol>
<ul>
<li>window 是瀏覽器中的全局物件，代表整個瀏覽器視窗。</li>
<li>它是所有全局變數和函式的最高級別的容器，可以透過它來訪問和操作全局範圍的變數和函式。</li>
<li>它提供了許多瀏覽器相關的屬性和方法，比如 window.location 可以用來獲取當前網址，window.alert() 可以用來顯示警告對話框，等等。</li>
</ul>
<ol start="2">
<li>document.body：</li>
</ol>
<ul>
<li>document.body 是 document 物件的一部分，代表 HTML 文件的主體部分。</li>
<li>它表示網頁中的 <body> 元素，即網頁中的主要內容區域。 *透過 document.body 可以訪問和操作網頁主體中的元素，例如透過 document.body.appendChild(element) 可以將元素添加到主體中。</li>
</ul>
<p>總結來說，window 是瀏覽器視窗的全局物件，而 document.body 是 HTML 文件的主體部分。它們都提供了許多功能來處理瀏覽器和網頁的相關操作。在網頁開發中，你會經常使用這兩個物件來操作網頁和處理事件。</p>
<h2 id="表格整理版"><a href="#表格整理版" class="headerlink" title="表格整理版"></a>表格整理版</h2><p>當前瀏覽器視窗和網頁文件主體的差異如下：</p>
<table>
<thead>
<tr>
<th>特性</th>
<th><code>window</code></th>
<th><code>document.body</code></th>
</tr>
</thead>
<tbody><tr>
<td>定義位置</td>
<td>全局範圍（在所有地方可訪問）</td>
<td><code>document</code> 物件的一部分（HTML 文件內）</td>
</tr>
<tr>
<td>代表的物件</td>
<td>瀏覽器視窗</td>
<td>HTML 文件的主體部分（<code>&lt;body&gt;</code> 元素）</td>
</tr>
<tr>
<td>功能</td>
<td>提供瀏覽器相關的屬性和方法</td>
<td>提供操作網頁主體內容的屬性和方法</td>
</tr>
<tr>
<td>例子</td>
<td><code>window.location</code></td>
<td><code>document.body.appendChild(element)</code></td>
</tr>
<tr>
<td>使用場景</td>
<td>瀏覽器操作、全局變數和函式</td>
<td>操作網頁內容、處理網頁事件</td>
</tr>
</tbody></table>
<p><code>window</code> 物件是瀏覽器中的全局物件，它提供了許多瀏覽器相關的屬性和方法，可以在任何地方訪問。而 <code>document.body</code> 則是 <code>document</code> 物件的一部分，代表 HTML 文件的主體部分，主要用於操作網頁主體內容，例如添加元素或處理事件。在網頁開發中，你會經常使用這兩個物件來處理瀏覽器和網頁的相關操作。</p>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
</search>
